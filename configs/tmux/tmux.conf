set -g prefix C-b 

# enable mouse support 
set -g mouse on 

# start window & pane numbering at 1 instead of 0 
set -g base-index 1 
set -g pane-base-index 1

# use vim keys in copy mode 
setw -g mode-keys vi 

#  use 'v' & 'C-v' to enter visual mode  
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# copy to system clipboard 
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"



set -g default-terminal "screen-256color"
set -ga terminal-features ",xterm-256color:RGB"

# Reload config file (prefix + r)
bind r source-file ~/.tmux.conf \; display-message "Tmux config reloaded"


# --- Tmux-Neovim Smart Pane Switching ---
# Based on christoomey/vim-tmux-navigator
# This checks if the current pane is running Neovim/Vim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim)(diff)?$'"

# Bind C-h/j/k/l to switch panes/Neovim splits intelligently
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Tmux Plugins 
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# tmux-resurrect specific settings 
set -g @continuum-restore 'on'

# tmux-continuum specific settings 
set -g @continuum-save-interval '15'


# init tmux plugin manager 
run '~/.tmux/plugins/tpm/tpm'
